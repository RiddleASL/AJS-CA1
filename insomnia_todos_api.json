{"_type":"export","__export_format":4,"__export_date":"2023-02-10T01:31:15.985Z","__export_source":"insomnia.desktop.app:v2022.7.5","resources":[{"_id":"req_ef7d9f8782c44995a63c274dcdfab085","parentId":"fld_1803588986bf4c2dae318b08494aa932","modified":1675992015940,"created":1675991254335,"url":"{{baseUrl}}/users/register","name":"Register","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"Mo Che\",\n\t\"email\": \"mo@mo.mo\",\n\t\"password\": \"secret\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1675991254335,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_1803588986bf4c2dae318b08494aa932","parentId":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","modified":1675991253099,"created":1675991253099,"name":"Users","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1675991253099,"_type":"request_group"},{"_id":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","parentId":null,"modified":1675441546758,"created":1675441546758,"name":"todos.yaml","description":"","scope":"design","_type":"workspace"},{"_id":"req_3c425c355a8d4e0bad9bc37b2fcd78e9","parentId":"fld_1803588986bf4c2dae318b08494aa932","modified":1675992094231,"created":1675992030840,"url":"{{baseUrl}}/users/login","name":"Login","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"mo@mo.mo\",\n\t\"password\": \"secret\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1675716973062,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_6af2e7d064894a3f8e8751a7a5e25c48","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675442799327,"created":1675442691789,"url":"{{baseUrl}}/todos","name":"All","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1675442691789,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_89dc084a1ff746099e7847b436704b5e","parentId":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","modified":1675442698531,"created":1675442698531,"name":"Todos","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1675442698531,"_type":"request_group"},{"_id":"req_23266bd42bbb4b4ab552c231a1ef499b","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675992277278,"created":1675443260460,"url":"{{baseUrl}}/todos/63dd3cbe5af56ffe7b0ba6a6","name":"Single","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{token}}"},"metaSortKey":-1674145141450.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_a5672bd9a74c4a17b2db8ea9927f54a7","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675992201081,"created":1675443274885,"url":"{{baseUrl}}/todos","name":"Create","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"text\": \"This is my first todo\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{token}}"},"metaSortKey":-1674145141400.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8fa4c1e05ca14f259c46876c60b2ca09","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675992206858,"created":1675443341512,"url":"{{baseUrl}}/todos/63dd3c7c5af56ffe7b0ba6a1","name":"Update","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"text\": \"This is my first todo\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{token}}"},"metaSortKey":-1673496366256.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_26c3183f95a04f6f86334fb251b0e1e5","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675992210716,"created":1675443372635,"url":"{{baseUrl}}/todos/63dd3c7c5af56ffe7b0ba6a1","name":"Delete","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{token}}"},"metaSortKey":-1673171978684.125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7f15c57c43a34878a6b7bcc619b56831","parentId":"fld_89dc084a1ff746099e7847b436704b5e","modified":1675992214835,"created":1675443397038,"url":"{{baseUrl}}/todos/63dd3cbe5af56ffe7b0ba6a6/toggle","name":"Toggle Completed","description":"","method":"PUT","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{token}}"},"metaSortKey":-1673171978634.125,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_e8889a61a4597b76210b171cb96792672e3d9be6","parentId":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","modified":1675992603516,"created":1675441546763,"name":"Base Environment","data":{"baseUrl":"http://localhost:3000/api","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1vQG1vLm1vIiwibmFtZSI6Ik1vIENoZSIsIl9pZCI6IjYzZTU5YmQyODIxYjZhMjlmODhjZjhlNyIsImlhdCI6MTY3NTk5MjU2NX0.gHeljbsS3CpHWMx1va0EUMHLMhRE9XwiGfbuJEsiNwA"},"dataPropertyOrder":{"&":["baseUrl","token"]},"color":null,"isPrivate":false,"metaSortKey":1675441546763,"_type":"environment"},{"_id":"jar_e8889a61a4597b76210b171cb96792672e3d9be6","parentId":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","modified":1675441546764,"created":1675441546764,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_b3831f9c83964e17bd613bcc820dd4f8","parentId":"wrk_729bdb0cc7b44ebba8156d0fd441ea89","modified":1675442628655,"created":1675441546759,"fileName":"todos.yaml","contents":"openapi: 3.0.3\n\ninfo:\n  version: 1.0.0\n  title: Todos API\n  description: Todos API\n  contact: \n    name: Mohammed Che\n\nservers:\n  - url: http://localhost:3000/api\n    description: Development Server\n    \n    \ntags:\n  - name: Todos\n    description: Everything about your Todos\n    \npaths:\n  /todos:\n    get:\n      tags:\n      - Todos\n      summary: Returns a list of all of the todos\n      description: Returns a list of all of the todos\n      operationId: getsTodo\n      responses:\n        '200':\n          description: Array of Todo Objects\n          content: \n            application/json:\n              schema: \n                type: array\n                items:\n                  $ref: '#/components/schemas/Todo'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n    post:\n      tags:\n      - Todos\n      summary: Creates a new Todo\n      description: Creates a new Todo\n      operationId: postsTodo\n      security:\n      - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Todo'\n      responses:\n        '200':\n          description: The newly created Todo Object\n          content: \n            application/json:\n              schema: \n                $ref: '#/components/schemas/Todo'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n  /todos/{id}:\n    get:\n      tags:\n      - Todos\n      summary: Returns a Todo by id\n      description: Returns a Todo by id\n      operationId: getsTodoById\n      security:\n      - bearerAuth: []\n      responses:\n        '200':\n          description: A Todo Object\n          content: \n            application/json:\n              schema: \n                $ref: '#/components/schemas/Todo'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n      parameters:\n      - name: id\n        in: path\n        description: ID of the Todo\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n      - Todos\n      summary: Updates a Todo by id\n      description: Updates a Todo by id\n      operationId: putsTodoById\n      security:\n      - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Todo'\n      responses:\n        '200':\n          description: The updated Todo Object\n          content: \n            application/json:\n              schema: \n                $ref: '#/components/schemas/Todo'\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n      parameters:\n      - name: id\n        in: path\n        description: ID of the Todo\n        required: true\n        schema:\n          type: string\n    delete:\n      tags:\n      - Todos\n      summary: Deletes an Todo by id\n      description: Deletes a Todo by id\n      operationId: deletesTodoById\n      security:\n      - bearerAuth: []\n      responses:\n        '200':\n          description: Returns null if successful\n          content: {}\n        '404':\n          $ref: '#/components/responses/NotFoundError'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '5XX':\n          $ref: '#/components/responses/ServerError'\n      parameters:\n      - name: id\n        in: path\n        description: ID of the Todo\n        required: true\n        schema:\n          type: string\n  \n  \ncomponents: \n  schemas:\n    Todo:\n      type: object\n      properties:\n        _id:\n          type: string\n        text:\n          type: string\n        completed:\n          type: boolean\n      required:\n        - text\n        \n  responses:\n    NotFoundError:\n      description: Entity not found.\n    UnauthorizedError:\n      description: Unauthorized\n    ServerError:\n      description: Server Error\n      \n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer","contentType":"yaml","_type":"api_spec"}]}